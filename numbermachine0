from math import floor
class numbermachine0:
  #requires import math
  def __init__(self,raw):
    self.data = sorted(raw)
    self.size = len(raw) 
    self.LowQTarget = 25 # sets default
    self.UppQTarget = 75 
  
  def PtLow(self): #lowest item of list
    return (self.data[0])
  def PtTop(self): #highest item of list
    return (self.data[-1])
  def PtMed(self): #median of list
    return (self.data[:self.size//2][-1] + self.data[-(self.size//2):][0])/2
  def PtQLow(self): #lower quartile
    return (self.data[:math.floor(self.size/100*self.LowQTarget)][-1] + self.data[-math.floor(self.size/100*(100-self.LowQTarget)):][0])/2
  def PtQUpp(self): #upper Quartile
    return (self.data[:math.floor(self.size/100*self.UppQTarget)][-1] + self.data[-math.floor(self.size/100*(100-self.UppQTarget)):][0])/2
